// Creating map object
var myMap = L.map("map", {
  center: [40.7, -73.95],
  zoom: 11
});
// Adding tile layer to the map
L.tileLayer("https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}", {
  attribution: "© <a href='https://www.mapbox.com/about/maps/'>Mapbox</a> © <a href='http://www.openstreetmap.org/copyright'>OpenStreetMap</a> <strong><a href='https://www.mapbox.com/map-feedback/' target='_blank'>Improve this map</a></strong>",
  tileSize: 512,
  maxZoom: 18,
  zoomOffset: -1,
  id: "mapbox/streets-v11",
  accessToken: API_KEY
}).addTo(myMap);
// Store API query variables
var baseURL = "https://data.cityofnewyork.us/resource/fhrw-4uyv.json?";
var date = "$where=created_date between'2016-01-01T00:00:00' and '2017-01-01T00:00:00'";
var complaint = "&complaint_type=Rodent";
var limit = "&$limit=10000";
// Assemble API query URL
var url = baseURL + date + complaint + limit;
console.log(url);
// Grab the data with d3
d3.json(url).then(data => {
  // Create a new marker cluster group
  var markerClusters = L.markerClusterGroup();
  data.forEach(d => {
    try {
      var lat = d['location']['coordinates'][1];
      var lng = d['location']['coordinates'][0];
      var descriptor = d['descriptor']
      var status = d['status']
      var incident_address = d['incident_address']
      marker = L.marker([lat, lng]);
      marker.bindPopup(`<strong>${incident_address}</strong><br/>${descriptor}<br/>Status: ${status}`);
      markerClusters.addLayer(marker);
    }
    catch {
      console.log('Error occured for the following set of data:');
      console.log(d);
    }
  });
  // Add our marker cluster layer to the map
  myMap.addLayer(markerClusters);
});